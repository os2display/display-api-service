# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $projectDir: '%kernel.project_dir%'
            $collectionProvider: '@api_platform.doctrine.orm.state.collection_provider'
            # @see https://api-platform.com/docs/core/state-processors/#hooking-into-the-built-in-state-processors
            $persistProcessor: '@api_platform.doctrine.orm.state.persist_processor'
            $removeProcessor: '@api_platform.doctrine.orm.state.remove_processor'

    _instanceof:
        App\Feed\FeedTypeInterface:
            tags: [app.feed.feed_type]

        App\Repository\MultiTenantRepositoryInterface:
            tags: [app.repository.multi_tenant]

        App\Filter\TenantExtension:
            tags:
                - { name: api_platform.doctrine.orm.query_extension.collection }
                - { name: api_platform.doctrine.orm.query_extension.item }

        App\InteractiveSlide\InteractiveSlideInterface:
            tags: [app.interactive.interactive]

    # Specify primary UserProviderInterface
    Symfony\Component\Security\Core\User\UserProviderInterface: '@security.user.provider.concrete.app_user_provider'

    # Make classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    #### App Scope below ###

    Symfony\Component\Security\Http\Authentication\AuthenticationFailureHandlerInterface: '@Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler'
    Symfony\Component\Security\Http\Authentication\AuthenticationSuccessHandlerInterface: '@Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler'

    App\Feed\CalendarApiFeedType:
        arguments:
            $locationEndpoint: '%env(string:CALENDAR_API_FEED_SOURCE_LOCATION_ENDPOINT)%'
            $resourceEndpoint: '%env(string:CALENDAR_API_FEED_SOURCE_RESOURCE_ENDPOINT)%'
            $eventEndpoint: '%env(string:CALENDAR_API_FEED_SOURCE_EVENT_ENDPOINT)%'
            $customMappings: '%env(json:CALENDAR_API_FEED_SOURCE_CUSTOM_MAPPINGS)%'
            $eventModifiers: '%env(json:CALENDAR_API_FEED_SOURCE_EVENT_MODIFIERS)%'
            $dateFormat: '%env(string:CALENDAR_API_FEED_SOURCE_DATE_FORMAT)%'
            $timezone: '%env(string:CALENDAR_API_FEED_SOURCE_DATE_TIMEZONE)%'
            $cacheExpireSeconds: '%env(int:CALENDAR_API_FEED_SOURCE_CACHE_EXPIRE_SECONDS)%'

    App\Service\KeyVaultService:
        arguments:
            $keyVaultSource: '%env(string:APP_KEY_VAULT_SOURCE)%'
            $keyVaultArray: '%env(json:APP_KEY_VAULT_JSON)%'

    App\Service\UserService:
        arguments:
            $hashSalt: '%env(EXTERNAL_OIDC_HASH_SALT)%'
            $codeExpireInterval: '%env(string:APP_ACTIVATION_CODE_EXPIRE_INTERNAL)%'

    App\Security\EventSubscriber\JwtTokenRefreshedSubscriber:
        arguments:
            $jwtRefreshTokenTtl: '%env(int:JWT_REFRESH_TOKEN_TTL)%'
            $jwtScreenRefreshTokenTtl: '%env(int:JWT_SCREEN_REFRESH_TOKEN_TTL)%'

    App\Security\EventListener\JWTCreatedListener:
        arguments:
            $requestStack: '@request_stack'
            $screenTokenTtl: '%env(int:JWT_SCREEN_TOKEN_TTL)%'
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\Security\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    app.tenant_scoped_authenticator:
        class: App\Security\TenantScopedAuthenticator
        parent: lexik_jwt_authentication.security.jwt_authenticator

    app.external_user_authenticator:
        class: App\Security\ExternalUserAuthenticator
        parent: lexik_jwt_authentication.security.jwt_authenticator

    App\Service\FeedService:
        arguments:
            - !tagged_iterator app.feed.feed_type

    App\Service\InteractiveSlideService:
        arguments:
            - !tagged_iterator app.interactive.interactive

    App\Security\ScreenAuthenticator:
        arguments:
            $jwtScreenRefreshTokenTtl: '%env(int:JWT_SCREEN_REFRESH_TOKEN_TTL)%'

    App\OpenApi\OpenApiFactory:
        decorates: 'api_platform.openapi.factory'
        arguments: ['@App\OpenApi\OpenApiFactory.inner']
        autoconfigure: false

    App\Utils\PathUtils:
        arguments: ['%api_platform.defaults%']
        autoconfigure: false

    App\Utils\ValidationUtils:
        arguments:
            $defaultDateFormat: '%env(string:APP_DEFAULT_DATE_FORMAT)%'

    App\EventListener\FeedDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\EventListener\FeedSourceDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\EventListener\MediaDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\EventListener\ScreenLayoutDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\EventListener\ScreenLayoutRegionsDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\EventListener\TemplateDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\EventListener\TenantDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]
        arguments:
            - !tagged_iterator app.repository.multi_tenant

    App\EventListener\ThemeDoctrineEventListener:
        tags: [doctrine.orm.entity_listener]

    App\Service\MediaUploadTenantDirectoryNamer:
        public: true

    App\Doctrine\UserExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }

    App\Filter\TenantExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }

    App\State\PlaylistSlideProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    # https://api-platform.com/docs/core/state-providers/#hooking-into-the-built-in-state-provider
    App\State\SlideProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]

    App\State\ScreenProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]

    App\State\TemplateProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]

    App\State\SlidePlaylistProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\ScreenCampaignProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\CampaignScreenProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\PlaylistScreenRegionProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\ScreenGroupsScreensProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\ScreenScreenGroupsProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\CampaignScreenGroupProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\ScreenGroupCampaignProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\FeedSourceSlideProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection

    App\State\FeedProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $itemExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.item

    # https://api-platform.com/docs/v2.7/core/state-providers/
    App\State\MediaProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $itemExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.item

    App\State\ThemeProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $itemExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.item

    App\State\UserProvider:
        tags: [ { name: 'api_platform.state_provider', priority: 2 } ]
        arguments:
            $collectionExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.collection
            $itemExtensions: !tagged_iterator api_platform.doctrine.orm.query_extension.item

    App\Security\AzureOidcAuthenticator:
        arguments:
            $oidcInternalClaimName: '%env(string:INTERNAL_OIDC_CLAIM_NAME)%'
            $oidcInternalClaimEmail: '%env(string:INTERNAL_OIDC_CLAIM_EMAIL)%'
            $oidcInternalClaimGroups: '%env(string:INTERNAL_OIDC_CLAIM_GROUPS)%'
            $oidcExternalClaimId: '%env(string:EXTERNAL_OIDC_CLAIM_ID)%'

    # Enable ULID helper CLI commands.
    Symfony\Component\Uid\Command\InspectUlidCommand: ~
    Symfony\Component\Uid\Command\InspectUuidCommand: ~

    # API Platform filters
    entity.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        tags: ['api_platform.filter']
        arguments: [ { title: 'partial', description: 'partial' } ]

    entity.blameable_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        tags: [ 'api_platform.filter' ]
        arguments: [ { createdBy: 'exact', modifiedBy: 'exact' } ]

    entity.order_filter:
        parent: 'api_platform.doctrine.orm.order_filter'
        tags: ['api_platform.filter']
        arguments:
            $properties: { title: 'ASC', description: ~ }
            $orderParameterName: order

    created.at.order_filter:
        parent: 'api_platform.doctrine.orm.order_filter'
        tags: ['api_platform.filter']
        arguments:
            $properties: { createdAt: ~ }
            $orderParameterName: order

    modified.at.order_filter:
        parent: 'api_platform.doctrine.orm.order_filter'
        tags: ['api_platform.filter']
        arguments:
            $properties: { modifiedAt: ~ }
            $orderParameterName: order

    feed_source.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        tags: ['api_platform.filter']
        arguments: [{ supportedFeedOutputType: 'exact' }]

    user.search_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        tags: ['api_platform.filter']
        arguments: [ { fullName: 'partial', email: 'partial' } ]

    # App filters for Api Platform
    App\Filter\PublishedFilter:
        tags: ['api_platform.filter']
        arguments:
            $properties: { publishedFrom: 'from', publishedTo: 'to' }

    App\Filter\MultipleSearchFilter:
        tags: ['api_platform.filter']
        arguments:
            $properties: { search: 'partial' }

    App\Filter\SharedWithMe:
        tags: ['api_platform.filter']
        arguments:
            $properties: { sharedWithMe: 'sharedWithMe' }

    App\Filter\CampaignFilter:
        tags: ['api_platform.filter']
        arguments:
            $properties: { isCampaign: 'isCampaign' }

when@test:
    services:
        # Service loaded in AbstractBaseApiTestCase::setUp() must be public.
        App\Utils\IriHelperUtils:
            public: true
